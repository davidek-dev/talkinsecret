---
import Layout from "../layouts/Layout.astro";
import Navbar from "../components/Navbar.astro";
import Image from "astro/components/Image.astro";
import Footer from "../components/Footer.astro";
import "../styles/index.css";
import "../global.css";
import Products from "../components/Products.astro";
import ContactInfo from "../components/contact/ContactInfo.astro";
import ContactForm from "../components/contact/ContactForm.astro";
import Video from "../components/Video.tsx"; // Import the Video component
import Music from "../components/Music.astro";
import Gigs from "../components/Gigs.astro";

export const videoVariants = [
    {
    url: "https://www.youtube.com/watch?v=8EeFU2--plk",
    bg: "/images/8EeFU2--plk-HD.jpg",
  },
  {
    url: "https://www.youtube.com/watch?v=GErEGaR8tMs",
    bg: "/images/image00001_scaled.jpeg",
  },
  {
    url: "https://www.youtube.com/watch?v=pFXFBMCwblQ",
    bg: "/images/pFXFBMCwblQ-HD.jpg",
  },
  {
    url: "https://www.youtube.com/watch?v=2E326wvssNc",
    bg: "/images/2E326wvssNc-HD.jpg",
  },

];

---

<Layout title="Talkin' Secret" >
  <div class="snap-y snap-mandatory h-screen overflow-y-scroll">

  <div class="cursor"></div>
  <div class="content max-w-full">
    <div>
      <!-- Sidebar navigation - visible on desktop, hidden on mobile -->
      <ul class="progress-bar fixed w-4 hidden lg:flex" id="sidebar">
        <li class="pli">
          <a class="opacity-0 hover:opacity-100 text-background" href="#videos">Videos</a>
        </li>
        <li class="pli">
          <a class="opacity-0 hover:opacity-100 text-background" href="#music">Music</a>
        </li>
        <li class="pli">
          <a class="opacity-0 hover:opacity-100 text-background" href="#gigs">Gigs</a>
        </li>
        <li class="pli">
          <a class="opacity-0 hover:opacity-100 text-background" href="#merch">Merch</a>
        </li>
        <li class="pli">
          <a class="opacity-0 hover:opacity-100 text-background" href="#contact">Contact</a>
        </li>
      </ul>
      
      
    <div class="section h-screen snap-center lg:pt-0">
      <Navbar class="z-1000 " />

      <picture >
        <source
          srcset="/images/fe0d0368-2823-4bf8-9a5b-b6ff5115a29e~3.jpeg"
          media="(max-width: 1023px)"
        />
        <source
          srcset="/images/e4d55f4b-503f-4b25-b30f-03d1740df704.jpeg"
          media="(min-width: 1024px)"
        />
        <img
          src="/images/e4d55f4b-503f-4b25-b30f-03d1740df704.jpeg"
          alt="Petrichor"
          width="1920"
          height="1080"
          class="w-[100%] h-[90vh] lg:h-[100vh] mb-32 object-cover"
        />
      </picture>
    </div>

    <div
      class="section flex flex-col justify-center h-screen snap-center relative"
      id="videos"
    >
      <h1
        class="lg:text-[15em] md:text-[10em] -ml-5 text-[5em] font-extrabold text-[#131c20] italic z-0  text-center lg:-mt-44 mb-7"
      >
        Videos
      </h1>
      <div class="self-center z-10 relative max-h-[100vh] w-[90%] lg:w-auto lg:-mt-24">
        <Video client:load videoVariants={videoVariants} />
      </div>
    </div>
    
    <div
      class="section md:flex lg:flex flex-col justify-center h-screen snap-center lg:py-[20%] hidden md:py-[15%]  "
      id="music"
    >
      <h1
        class="lg:text-[15em] md:text-[10em] text-[5em] pb-14 -mt-28 font-extrabold text-center text-[#131c20] italic lg:mb-[-0.6em]"
      >
        Music
      </h1>
      <Music class="w-full self-center justify-center content-center items-center"/>
    </div>

    <div
      class="section flex flex-col justify-center h-screen snap-center relative"
      id="gigs"
    >
      <h1
        class="lg:text-[15em] md:text-[10em] text-[5em] font-extrabold -mt-48 text-center text-[#131c20] italic "
      >
        Gigs
      </h1>
      <Gigs />
    </div>
    
    <div
      class="section flex flex-col justify-center items-center h-[100vh] snap-center relative mb-[20vh] overflow-hidden"
      id="merch"
    >
      <h1
        class="lg:text-[15em] md:text-[10em] text-[5em] font-extrabold text-center text-[#131c20] italic m-0 lg:mb-2"
        style="margin:0;"
      >
        Merch
      </h1>
      <Products class="w-full self-center justify-center content-center items-center lg:mt-0 lg:pt-0"/>
    </div>

    <div class="section h-[200vh] md:h-[100vh] lg:h-[100vh] snap-center md:pt-28 sm:pt-[10vh] sm:mt-[10vh]" id="contact">
      <h1
        class="lg:text-[15em] md:text-[10em] text-[5em]  font-extrabold text-center text-[#131c20] italic  -mt-36 -mb-24"
      >
        Contact
      </h1>
      <ContactInfo />
      <ContactForm />
    </div>
    </div>
  </div>
  <div class="section h-[35%] snap-center">
    <Footer title="Talkin' Secret" />
  </div>
  </div>
</Layout>

<script
  is:inline
  src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/gsap.min.js"></script>

<script is:inline>
window.addEventListener("load", () => {
  // Check if the device is a desktop (screen width >= 1024px)
  const isDesktop = window.innerWidth >= 1024;
  const mouseCursor = document.querySelector(".cursor");

  if (!mouseCursor) {
    console.warn("Cursor element nicht gefunden");
    return;
  }

  // Only enable custom cursor behavior on desktop
  if (isDesktop) {
    const links = document.querySelectorAll("a");
    const buttons = document.querySelectorAll("button");

    const cursor = (e) => {
      gsap.to(mouseCursor, {
        duration: 0.2,
        x: e.clientX,
        y: e.clientY,
      });
    };

    window.addEventListener("mousemove", cursor);

    links.forEach((link) => {
      link.addEventListener("mouseover", () => {
        gsap.to(mouseCursor, {
          duration: 0.2,
          scale: 2.5,
        });
      });

      link.addEventListener("mouseleave", () => {
        gsap.to(mouseCursor, {
          duration: 0.2,
          scale: 1,
        });
      });
    });

    buttons.forEach((button) => {
      button.addEventListener("mouseover", () => {
        gsap.to(mouseCursor, {
          duration: 0.2,
          scale: 2.5,
        });
      });

      button.addEventListener("mouseleave", () => {
        gsap.to(mouseCursor, {
          duration: 0.2,
          scale: 1,
        });
      });
    });
  } else {
    // For mobile and tablet, ensure the cursor element is hidden
    if (mouseCursor) {
      mouseCursor.style.display = 'none';
    }
  }
  
  // Add active class to sidebar links based on scroll position
  const sections = document.querySelectorAll('.section');
  const navLinks = document.querySelectorAll('#sidebar li');
  
  window.addEventListener('scroll', () => {
    let current = '';
    
    sections.forEach(section => {
      const sectionTop = section.offsetTop;
      const sectionHeight = section.clientHeight;
      if (pageYOffset >= (sectionTop - sectionHeight/3)) {
        current = section.getAttribute('id');
      }
    });
    
    navLinks.forEach(li => {
      li.classList.remove('active');
      if (li.querySelector('a').getAttribute('href') === `#${current}`) {
        li.classList.add('active');
      }
    });
  });

  // Smooth scrolling for internal links
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      
      document.querySelector(this.getAttribute('href')).scrollIntoView({
        behavior: 'smooth'
      });
    });
  });
});
</script>